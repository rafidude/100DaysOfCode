die <- 1:6
die - 1
die/2
die * die
dice <- sample(die, size = 2, replace = TRUE)
dice
dice
dice
roll2 <- function(bones=1:6){}
roll2 <- function(bones=1:6){
dice <- sample(bones, size=2, replace=T)
sum(dice)
}
roll2()
roll2()
roll2()
roll2()
roll2()
install.packages("ggplot2")
library("ggplot2")
qplot
x <- c(-1, -0.8, -0.6, -0.4, -0.2, 0, 0.2, 0.4, 0.6, 0.8, 1)
y <- x ^ 3
y
qplot(x, y)
x<-c(1,2,2,2,3,3)
qplot(x, binwidth = 1)
x2<-c(1,1,1,1,1,2,2,2,2,3,3,4) qplot(x2, binwidth = 1)
qplot(x2, binwidth = 1)
qplot(x2, binwidth = 1)
x2<-c(1,1,1,1,1,2,2,2,2,3,3,4) qplot(x2, binwidth = 1)
qplot(x2, binwidth = 1)
x2<-c(1,1,1,1,1,2,2,2,2,3,3,4)
qplot(x2, binwidth = 1)
replicate(3, 1 + 2)
roll()
roll <- function(die=1:6){
dice <- sample(die, size=2, replace=T)
sum(dice)
}
roll()
rolls <- replicate(1000, roll())
qplot(rolls, binwidth=1)
rolls <- replicate(10000, roll())
qplot(rolls, binwidth=1)
rolls <- replicate(10000, LoadedRoll())
qplot(rolls, binwidth=1)
LoadedRoll <- function(die=1:6){
dice <- sample(die, size=2, replace=T, prob = c(1/8, 1/8, 1/8, 1/8, 1/8, 3/8))
sum(dice)
}
rolls <- replicate(10000, LoadedRoll())
qplot(rolls, binwidth=1)
update.packages(c("ggplot2", "reshape2", "dplyr"))
getwd()
uciCar <- read.table('car.data.csv',sep=',', header=T)
getwd()
setwd("/Users/agilesense/gocode/src/github.com/rafidude/100DaysOfCode/34day")
uciCar <- read.table('car.data.csv',sep=',', header=T)
ls()
uciCar <- read.table('cars.data.csv',sep=',', header=T)
head(uciCar)
summary(uciCar)
class(uciCar)
dim(uciCar)
d <- read.table(paste('http://archive.ics.uci.edu/ml/', 'machine-learning-databases/statlog/german/german.data',sep=''), stringsAsFactors=F,header=F)
View(d)
print(d[1:3,])
colnames(d) <- c('Status.of.existing.checking.account', 'Duration.in.month', 'Credit.history', 'Purpose', 'Credit.amount', 'Savings account/bonds', 'Present.employment.since', 'Installment.rate.in.percentage.of.disposable.income', 'Personal.status.and.sex', 'Other.debtors/guarantors', 'Present.residence.since', 'Property', 'Age.in.years', 'Other.installment.plans', 'Housing', 'Number.of.existing.credits.at.this.bank', 'Job', 'Number.of.people.being.liable.to.provide.maintenance.for', 'Telephone', 'foreign.worker', 'Good.Loan')
d$Good.Loan <- as.factor(ifelse(d$Good.Loan==1,'GoodLoan','BadLoan'))
print(d[1:3,])
View(d)
custdata <- read.table('custdata.tsv',header=T,sep='\t')
head(custdata)
custdata <- read.table('custdata.tsv',header=T,sep='\t')
head(custdata)
names(custdata)
summary(custdata$age)
hist(custdata$age)
summary(custdata)
hist(custdata$income)
names(custdata)
table(custdata$is.employed)
library(ggplot2)
ggplot(custdata) +
geom_histogram(aes(x=age),
binwidth=5, fill="gray")
ggplot(custdata) + geom_histogram(aes(x=age), binwidth=5, fill="gray")
library(scales)
ggplot(custdata) + geom_density(aes(x=income)) + scale_x_continuous(labels=dollar)
ggplot(custdata) + geom_density(aes(x=income)) + scale_x_log10(breaks=c(100,1000,10000,100000), labels=dollar) + annotation_logticks(sides="bt")
dat <- c(10, 7, 12, 9, 11, 6)
dim(dat) <- c(2, 3)
dat
dim(dat) <- c(3, 2)
dat
rownames(dat) <- c("A1", "A2", "A3")
dat
colnames(dat) <- c("B1", "B2")
dat
barplot(simpledat, beside=TRUE)
barplot(dat, beside=TRUE)
barplot(t(dat), beside=TRUE)
barplot(dat, beside=TRUE)
barplot(t(dat), beside=TRUE)
dat <- t(dat)
plot(dat[1,], type='l')
plot(dat[2,], type='l', col='blue')
lines(dat[2,], type='l', col='blue')
dat
dat[1,1]
names(dat[1,1])
rowname(dat[1,1])
dat <- data.frame(xval=1:4, yval=c(3,5,6,9), group=c("A","B","A","B"))
dat
ggplot(dat, aes(x=xval, y=yval))
library(ggplot2)
ggplot(dat, aes(x=xval, y=yval))
ggplot(dat, aes(x=xval, y=yval)) + geom_point()
p <- ggplot(dat, aes(x=xval, y=yval))
p + geom_point()
p + geom_point(aes(colour=group))
p + geom_point(colour="blue")
ggplot(custdata) + geom_bar(aes(x=marital.stat), fill="gray")
ggplot(custdata) +
geom_bar(aes(x=state.of.res), fill="gray") +
coord_flip() +
theme(axis.text.y=element_text(size=rel(0.8)))
x <- runif(100)
x
y <- x^2 + 0.2*x
ggplot(data.frame(x=x,y=y), aes(x=x,y=y)) + geom_line()
custdata2 <- subset(custdata, (custdata$age > 0 & custdata$age < 100 & custdata$income > 0))
hist(custdata2$age)
custdata2 <- subset(custdata, (custdata$age > 20 & custdata$age < 80 & custdata$income > 0))
hist(custdata2$age)
hist(custdata2$income)
custdata2 <- subset(custdata, (custdata$age > 20 & custdata$age < 80 & custdata$income > 10000 & custdata$income < 250000))
hist(custdata2$age)
hist(custdata2$income)
custdata2 <- subset(custdata, (custdata$age > 20 & custdata$age < 80 & custdata$income > 10000 & custdata$income < 200000))
hist(custdata2$age)
hist(custdata2$income)
cor(custdata2$age, custdata2$income)
ggplot(custdata2, aes(x=age, y=income)) + geom_point() + ylim(0, 200000)
ggplot(custdata2, aes(x=age, y=income)) + geom_point()
ggplot(custdata2, aes(x=age, y=income)) + geom_point() + stat_smooth(method="lm")
ggplot(custdata2, aes(x=age, y=income)) + geom_point() + geom_smooth()
custdata2$incomek = custdata2$income/1000
ggplot(custdata2, aes(x=age, y=incomek)) + geom_point() + geom_smooth()
packages.install("hexbin")
package.install("hexbin")
install.packages("hexbin")
library(hexbin)
ggplot(custdata2, aes(x=age, y=income)) + geom_hex(binwidth=c(5, 10000)) + geom_smooth(color="white", se=F)
custdata <- read.table('../34day/custdata.tsv',header=T,sep='\t')
custdata2 <- subset(custdata, (custdata$age > 20 & custdata$age < 80 & custdata$income > 10000 & custdata$income < 200000))
library(hexbin)
ggplot(custdata2, aes(x=age, y=income)) +  geom_hex(binwidth=c(5, 10000)) + geom_smooth(color="white", se=F)
ggplot(custdata) + geom_bar(aes(x=marital.stat, fill=health.ins))
ggplot(custdata) + geom_bar(aes(x=marital.stat, fill=health.ins), position='dodge')
ggplot(custdata) + geom_bar(aes(x=marital.stat, fill=health.ins), position='fill')
geom_bar(aes(fill=health.ins), position="fill") + geom_point(aes(y=-0.05), size=0.75, alpha=0.3, position=position_jitter(h=0.01))
ggplot(custdata, aes(x=marital.stat)) + geom_bar(aes(fill=health.ins), position="fill") + geom_point(aes(y=-0.05), size=0.75, alpha=0.3, position=position_jitter(h=0.01))
